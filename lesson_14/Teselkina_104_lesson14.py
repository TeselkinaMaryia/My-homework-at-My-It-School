import os
from typing import List


# 1
def sum_() -> tuple:  # объявляем функцию без параметра, которая возвращает кортеж
    with open('sting_nums.txt') as file:
        # открываем файл в режиме чтения (по умолчанию) и записываем его в переменную по новым именем
        sum_int: int = 0  # переменная, которая ссылается на число
        my_string: str = ''  # переменная, которая ссылается на строку
        for elem in file.readline().replace('_', ' ').split(' '):
            # цикл: для каждого элемента в первой строке текстового документа,
            # где все элементы разделены в местах пробела и представлены в виде списка
            if elem.isdigit():  # условие: если элемент - чило
                sum_int += int(elem)
                # приводим элемент к типу данных целые числа и добавляем его значение к значению переменной
            elif elem.isalpha():  # альтернативное условие: если элемент состоит из букв
                my_string += elem + ' '  # добавляем элемент и пробел после него к строке
        return sum_int, my_string  # возвращаем кортеж из значения суммы всех чисел и строки


# 2
def sort_list() -> list:  # объявляем функцию без параметра, которая будет возвращать отсортированный список
    with open('str_int_lines.txt') as file:  # открываем текстовый файл для чтения и обозначаем его как file
        list_int: List = []  # переменная, которая ссылается на пустой список
        list_str: List = []
        for elem in file.read().split('\n'):  # для каждого элемента из списка
            if elem.isdigit():  # условие: если элемент - число
                list_int.append(int(elem))  # добавляем в конец списка
            else:  # альтернативное условие
                list_str.append(elem)  # добавляем элемент в конец другого списка
        list_int.sort()  # сортируем список из чисел
        list_str.sort(key=len)  # сортируем список из строк по длине строки
        list_int.extend(list_str)  # объединяем списки
        return list_int  # возвращаем список


# 3
def write_text(string: str) -> str:  # объявляем функцию с одним параметром, которая возвращает строку
    file = open('write_lines.txt', 'a', encoding='utf-8')  # открываем файл для добавления текста
    try:  # действие, которое может повлечь исключение
        file.write(string + '\n')  # запись в файл строки с новой строчки
    except:  # если было вызвано любое исключение
        return 'some Error'  # возвращаем строку
    finally:  # блок инструкции, который выполняется всегда
        file.close()  # закрываем текстовый файл


# 4
def count_lines():  # объявляем функцию без параметра
    with open('count.txt', encoding='utf-8') as file:  # открываем файл в режиме чтения и обозначаем его как file
        lines: int = 0  # переменная, которая ссылается на число
        for elem in file.read().split('\n'):  # для каждого элемента в списке из строк
            print(f' В строке: {elem} -  {len(elem)} символов')  # вывод в кансоль элемента и его длины
            lines += 1  # добавляем 1 к значению переменной
        print(f'количество строк - {lines}')  # выводим в кансоль значение количества строк в файле

# 1
# print(sum_())  # вызываем функцию

# 2
# print(sort_list())  # вызываем функцию

# 3
# string_: str = input('Введите строку: ')  # переменная, которая ссылаетяс на вводимую пользователем строку
# while string_ != '':  # пока переменная не является пустой строкой
#     write_text(string_)  # вызываем функцию
#     string_: str = input('Введите новую строку: ')

# 4
# count_lines()  # вызываем функцию
