from array import array

# 1
string = input('Введите строку: ')  # переменная, которая ссылается на вводимое с клавиатуры значение
symbol = input('Введите символ: ')  # переменная, которая ссылается на вводимое с клавиатуры значение
text = ''  # переменная типа строка, которая пуста
for i in string:  # цикл. для чего-то в чем-то
    if i != symbol:  # условие, если переменная в цикле не равняется символу, то
        text += i  # создается новая строка, в которую будут входить все символы, кроме введенного
print(text)  # вывод в кансоль новой переменной

# 2
beginning = int(input('Введите значение, с которого хотите начать: '))
# переменная, которая ссыдается на вводимое с клавиатуры значение
end = int(input('Введите значение, которым хотите закончить: '))
# переменная, которая ссыдается на вводимое с клавиатуры значение
step = int(input('Введите значение шага: '))
# переменная, которая ссыдается на вводимое с клавиатуры значение
for a in range(beginning, end, step):  # цикл. вводим в цикл новую переменную (действует только в пределах цикла)
    print(a)  # выводим переменную

# 3
for digit in range(54, 9185):  # цикл. вводим в цикл новую переменную. формируем диапазон значений
    if digit % 5 == 0:  # условие: если остаток от деления на 5 будет 0
        print(digit)  # выводим в кансоль число если оно кратно 5

#
arr = ['string1', 'string2', 'string3']  # массив, состоящий из строк
L = len(arr)  # переменная, которая ссылается на функцию, которая возвращает число элементов внутри массива
print(arr, 'Длинна: ', L)  # Встроенная функция, которая выводит в кансоль массив, строку и значение переменной

# 4
food = ['каша', 'хдеб', 'яичница', 'сыр', 'салат']  # массив в котором элементы - названия блюд
dish = input('Введите блюдо, которое вы не едите: ')  # переменная, которая ссылается на вводимую с клавиатуры строку
for i in food:  # цикл. для переменной в массиве
    if i == dish:  # условие: если переменная в массиве совпадает с со стракой, которую мы ввели, то ...
        print('Я не ем - ' + i)  # выводится в кансоль строка и название блюда, которое вы не едите
    else:
        print('Можете подавать блюдо')
        # встроенная функция, которая выводит в кансоль текст, если условие не выполняется

# 5
digits = [1, 3, 5, 7, 9, 11, 15, 17, 19, 23, 35, 39, 41, 45]  # массив чисел
sum_ = 0  # переменная, которой присвоенно значение 0
product = 1  # переменная, которой присвоено значение 1
for i in digits:  # цикл, для переменной в массиве
    sum_ += i  # переменная, которая добавляет элемент в переменную, складывая ее значение с уже имеющимся
    product *= i  # переменная, которая добавляет элемент из массива в переменную, умножая ее на значение переменной
    if i == digits[-1]:  # условие: если элемент в массиве последний
        print(sum_, product, sep='\n')  # функция, которая выводит в кансоль сумму и произведение элементов в массиве

# 6.1
number = [1, 2, 3, 4, 5, 6, 7, 8, 9]  # массив состоящий из чисел
pr1 = 1  # переменные
pr2 = 1
pr3 = 1
pr4 = 1
pr5 = 1
pr6 = 1
pr7 = 1
pr8 = 1
pr9 = 1
for i in number:  # цикл жля переменной в массиве
    pr1 = 1 * i  # переменная, которая ссылается на значение произведения переменной из массива с числом
    pr2 = 2 * i
    pr3 = 3 * i
    pr4 = 4 * i
    pr5 = 5 * i
    pr6 = 6 * i
    pr7 = 7 * i
    pr8 = 8 * i
    pr9 = 9 * i
    print('1 * ', i, '= ', pr1, '\t', '2 * ', i, '= ', pr2, '\t',
          '3 * ', i, '= ', pr3, '\t', '4 * ', i, '= ', pr4, '\t',
          '5 * ', i, '= ', pr5, '\t', '6 * ', i, '= ', pr6, '\t',
          '7 * ', i, '= ', pr7, '\t', '8 * ', i, '= ', pr8, '\t',
          '9 * ', i, '= ', pr9)
# функция, которая выводит в кансоль таблицу умножения

# 6.2
for number1 in range(1, 10):  # цикл. указана переменная в цикле и диапазон чисел
    for number2 in range(1, 10):  # цикл. указана переменная в цикле и диапазон чисел
        print(number1, '*', number2, '=', number1 * number2, end='\t')  # вывод в кансоль выражения и ответ
    print()  # перенос курсора на новую строку

# 1
numbers = range(1, 100)  # переменная, которая ссылается на последовательность чисел в заданном промежтке
product = 1  # переменная, которая ссылается на значение 1
for i in numbers:  # проходит по каждому символу в последовательности
    if i % 2 != 0:  # условие: если остаток от деления на 2 не равен 0
        product *= i  # если условие верно: то мы умножаем значение переменной на число из последовательности
        if i == numbers[-1]:  # условие: если мы дойдем до последнего числа в последовательности
            print('Произведение нечетных чисел от 1 до 100 = ', product)
            # вывод в кансоль произведения всех нечетных чисел

# 2
arr = array('i', [])  # создаем массив с указание integer в качестве тайпкода
for digit in range(1, 501):  # для каждого значения в диапазоне от 1 до 500 (включительно)
    if digit % 5 == 0:  # условие: если число из диапазона делиться на 5 без остатка
        arr.append(digit)  # метод, который добавляет значение в конец массива
        if digit == 500:  # условие: если число = 500
            print('Массив состоит из: ', list(arr))
            # вывод в кансоль текста и значений массива преобразованных в тип лист
# 3
for i in range(1, 497):  # для каждого элемента в диапазоне от 1 до 497
    if i % 2 == 0:  # условие: если остаток от деления на 2 = 0
        print(i, end=',')  # вывод в кансоль чисел через запятую
print()

# 4
arr1 = array('i', [1, 2, 3, 4, 1, 2, 7, 6, 8, 9, 8, 11, 16, 18, 13, 11, 9, 0, 16])
# создаем массив, состоящий из целых чисел
arr2 = array('i', [])  # создаем пустой массив в который будем добавлять числа
for i in arr1:  # для каждого элемента в массиве 1
    count_ = arr1.count(i)  # переменная, которое ссылается на значение (считает число раз вхождения элемента в массив)
    if count_ >= 2:  # условие: если число вхождений элемента 2 и более
        if i not in arr2:  # если элемента еще нет в массиве 2
            arr2.append(i)  # метод, который добавляет число в массив 2
            if i == arr1[-1]:  # условие: если цикл доходит до последнего значения в массиве
                print('Новый массив: ', list(arr2))  # вывод в кансоль значений массива преобразованных в тип лист
