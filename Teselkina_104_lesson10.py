from typing import List, Dict


# 6/1
def new_dict() -> dict:  # объявляем функцию без параметра, которая возвращает словарь
    string: str = 'pytonist'  # переменная, которая ссылается на строку
    list_keys: List[str] = []  # переменная, которая ссылается на пустой список
    list_values: List[int] = []  #
    for letter in string:  # цикл: для каждой буквы в строке
        list_keys.append(letter)  # добавить в конец списка букву
        list_values.append(string.count(letter))  # добавить в конец списка количество данной буквы в строке
    return dict(zip(list_keys, list_values))


# 6/2
def new_dict_1() -> dict:  # объявляем функцию без параметра, которая возвращает словарь
    string_1: str = 'pytonist'  # переменная, которая ссылается на строку
    my_dict: Dict[str, int] = {letter: string_1.count(letter) for letter in string_1}
    # переменная, которая ссылается на словарь. Словарь создан с помощью генератора
    return my_dict


# DZ
def shop(dict_: Dict[str, List]):  # объявляем функцию с одним параметром
    for keys in dict_:  # цикл: для каждого ключа в словаре
        print(keys, ' - ', dict_[keys][0], 'руб', ' - ', dict_[keys][1], 'шт')  # вывод в кансоль

    for key in dict_:  # цикл: для каждого ключа в словаре
        while dict_[key][1] > 0:  # цикл: пока количество товаров больше 0
            name_product: str = input('Введите название товара из списка: ')
            # переменная, которая ссылается на вводимое с клавиатуры значение
            count_product: int = int(input('Введите количество товара: '))
            # переменная, которая ссылается на вводимое с клавиатуры значение
            stop_word: str = input('stop or not? ')
            # переменная, которая ссылается на вводимое с клавиатуры значение
            if dict_[name_product][1] == 0:  # условие: если количество продукта 0
                print(f'{name_product} - данный товар закончился')  # вывод в кансоль
                break  # досрочно прерывает цикл
            elif dict_[name_product][1] - count_product < 0:
                # альтернативоное условие: если товара меньше, чем хотят купить
                print('В магазине недостаточно данного товара')  # вывод информации в кансоль

            if stop_word == 'stop':  # условие: если введено стоп слово
                break  # досрочно прерываем цикл
            else:  # альтернативное условие
                print(f'Цена товара {name_product}: {dict_[name_product][0] * count_product} рублей')
                # вывод в кансоль
                dict_[name_product][1] -= count_product  # отнимает товар который купили
                print(f'Остаток:  {dict_}')  # вывод в кансоль товаров, которые остались


# 6/1
print(new_dict())  # вызываем функцию

# 6/2
print(new_dict_1())  # вызываем функцию

# DZ
shop_dict: Dict[str, List] = {'молоко': [2.30, 2], 'сыр': [3.50, 15],
                              'сметана': [1.15, 24], 'яйца': [4.00, 40], 'творог': [3.20, 27]}
# переменная, которая ссылается на словарь

shop(shop_dict)  # вызываем функцию
